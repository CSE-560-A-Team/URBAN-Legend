/*!
\page deviations Deviations

As is almost always the case for languages, the URBAN specification leaves room for
modifications to improve user experience. URBAN Legend changes several aspects of the
original specification to make coding in the language more pleasant.

\section operands Operands

Several of URBAN's operand specifications are overly restrictive.

<table>
  <tr>
    <th>Specification</th>
    <th>Changes made</th>
  </tr>
  <tr>
    <td>D5, D6</td>
    <td>URBAN Legend does not limit the number of labels you may import/export per directive.</td>
  </tr>
  <tr>
    <td>D10</td>
    <td><ul>
      <li>URBAN Legend allows multi-word string literals. If you exceed four characters, additional
          words will be used to hold the complete string.</li>
      <li>C-style escape sequences are permitted. These include the following:
        <ul>
          <li>Octal escapes \\000 - \\377; up to three digits will be considered, or two digits if the
              third digit would otherwise exceed 0377.</li>
          <li>Hexadecimal escapes \\x00 - \\xFF, where up to two digits are considered.</li>
          <li>Whitespace escapes: \\r = CR, \\n = LF, \\t = TAB.</li>
          <li>Control escapes: \\' = Single quote, \\\" = Double quote, \\\\ = Backslash.</li>
        </ul></li>
    </ul></td>
  </tr>
  <tr>
    <td>MV0 MV1 IA0 IA1 IA2 IA3 IA4 IA5 IA6 IA7 IM6 IM7</td>
    <td>
        URBAN-Legend allows these operands to use register-to-register and non-indexed
        memory-to-memory operand combinations. See <a href="#formats">formats</a> section
        for more information.
    </td>
  </tr>
  <tr>
    <td>JT3</td>
    <td>
        URBAN-Legend allows jumps to memory with an index register. Useful for impromptu switch()
        structures and indirect jumps.
    </td>
  </tr>
  <tr>
    <td>&lt;unspecified&gt;</td>
    <td>
        Instruction lines which are not well-formed are replaced in the user report and in the object
        file by NOPs. Instruction lines containing errors which do not distrupt the execution of the
        function (such as the use of undefined labels in expressions) will generate an error but will
        be salvaged.
    </td>
  </tr>
</table>

\section expressions Expressions

URBAN's expression syntax was also somewhat limiting, but only minor changes were made.

<table>
  <tr>
    <th>Specification</th>
    <th>Changes made</th>
  </tr>
  <tr>
    <td>EX1</td>
    <td><ul>
      <li>Star notation may be used in any expression containing sufficient bits to hold the address.</li>
      <li>A star may be used anywhere within the expression, not exclusively as the first character.</li>
      <li>External labels may be used in any expression.</li>
    </ul></td>
  </tr>
  <tr>
    <td>EX2</td>
    <td><ul>
      <li>A star may be used anywhere within the expression, not exclusively as the first character.</li>
      <li>You may use any number of stars in the expression, though this feature may only be useful
           for placing repeated blocks at the very beginning of memory (eg, using *+* to obtain the
           address following a second block of equal size from the start of memory.</li>
    </ul></td>
  </tr>
  <tr>
    <td>EX3</td>
    <td><ul>
      <li>A star may be used anywhere within the expression, not exclusively as the first character.</li>
      <li>You may use any number of stars in the expression (see EX2 notes above).</li>
    </ul></td>
  </tr>
</table>

\section formats Formats

Due to collisions and other issues in byte codes in the URBAN specification, versions 1.1 and 1.2, the
instruction formats employed in URBAN Legend have been revised. These are documented further in the \ref userGuide.

*/
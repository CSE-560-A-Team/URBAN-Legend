# This is a comprehensive list of all errors generated by this assembler.
testError     = This is a sample error message, generated %0 by %1
compilerError = *** INTERNAL ERROR: %0

# Errors used in Instruction::parse()
labelNotCol0   = 001: URBAN specification says labels must start at column 0 (`%0' is not a %1 instruction)
expectOpBefore = 002: Expected operand keyword before '%0' symbol
notOperand     = 003: Unrecognized operand keyword `%0'
expectOpColon  = 004: Expected colon following `%0' keyword
unexpSymFollow = 005: Unexpected symbol `%0' following %1
instrUnknown   = 006: `%0' is not a known instruction
instrInvalid   = 007: `%0' is not a valid instruction
unexpSymOp     = 008: Unexpected symbol '%0' in `%1' operand

# Module Error
ORmoduleLength = 014: Module `%0' is too long

# Expression evaluation errors
undefEqLabel   = 021: Could not find label `%0': Must be a previously defined EQU or EQUe label
undefLabel     = 022: Could not find label `%0': Label not in symbol table
illegalRefAmp  = 023: Cannot take reference of non-EQU label `%0' in this context
unexpSymExp    = 024: Unexpected symbol '%0' in expression
emptyExpr      = 025: Empty expression given
opratorExp     = 026: Operator '+' or '-' expected here
nonConstExpr   = 028: Constant expression expected; `%0` cannot be properly evaluated here
arecNotAllowed = 029: Expression with address type '%0' not allowed in this context

# General purpose operand errors
directiveMissingOp    = 040: Missing `%1' operand to `%0' directive
instructionMissingOp  = 041: Missing `%1' operand to `%0' instruction
instructionMissingOpS = 041: Missing `%1' (%2) operand to `%0' instruction
directiveMissingOp2   = 042: Missing `%1' or `%2' operand to `%0' directive
instructionMissingOp2 = 043: Missing `%1' or `%2' operand to `%0' instruction
directiveMissingOp3   = 044: Missing `%1', `%2', or `%3' operand to `%0' directive
instructionMissingOp3 = 045: Missing `%1', `%2', or `%3' operand to `%0' instruction
operandInsWrong       = 046: Operand `%1' is inapplicable for `%0' instruction
operandDirWrong       = 047: Operand `%1' is inapplicable for `%0' directive
operandInsNeedAdd     = 048: `%0' instruction requires `%1' operand in addition to `%2'
extraOperandsIns      = 049: Too many operands to `%0' instruction.
extraOperandsDir      = 050: Too many operands to `%0' directive
extraOperands         = 051: Too many operands provided
tooFewOperandsIns     = 052: Too few operands to `%0' instruction
tooFewOperandsDir     = 053: Too few operands to `%0' directive
tooFewOperands        = 054: Too few operands provided
operandWrongWith	  = 055: Operand not valid with operand combination `%0' and `%1'.
operandInsBeWith      = 056: Operand `%0' must be paired with operand `%1' for instruction `%2'.
operandInsMayWith     = 057: Operand `%0' may only be paired with operand `%1' for instruction `%2'.
# Operand Out of Range errors
OORmemAddr    = 071: Operand `%0' for `%1' instruction/directive must be within range: [0, 4095]
OORidxReg     = 072: Operand `%0' for `%1' instruction must be within range: [1,7]
OORlabel      = 073: Operand `%0' for `%1' instruction/directive must contain a valid label
OORarithReg   = 074: Operand `%0' for `%1' instruction must be within range: [0,7]
OORconstant   = 075: Operand `%0' for `%1' instruction must be within range: [%2, %3]
OOR13tc       = 076: Operand `%0' for `%1' instruction must be within range: [2^15-1,-2^15]
OORnw         = 077: Operand `NW' for `%0' instruction must be within range: [0, 15]
OORurbanWord  = 078: Value of expression `%0` does not fit in URBAN word

# Operand-specific errors
STstringCount = 091: Operand `ST' must contain precisely one string in this context
lcBackward    = 091: Directive attempts to move LC backwards
invalidExt    = 091: Attempt to externalize %1 label %0

# Label errors
noLabel      = 111: Remove label from `%0' directive
singLabelExp = 112: Expected single label for `%0' operand
matchLabel   = 113: LR:label must match KICKO label
noRQlabel    = 114: Missing label to `%0' directive: Label is required

# Symbol table errors.
duplicateSymbol = 131: Duplicate symbol `%0' on line defined on line `%1'
shadowLabel     = 132: Symbol `%0' shadows external symbol at line `%1'


# Assembler errors
KICKOlineNum = 151: Directive `KICKO' must be placed at the first line of the source file
OOM          = 152: Out of Memory.
expSemiEOF   = 153: Expected semicolon before end of file
NoEnd        = 154: No `End' Directive before end of file

# Extra errors
unmatchedStr = 171: String "%0" does not match %1

# Warnings
LinePastEnd = 301: Lines past `END' directive.
extraParamsIgF = 302: Extra parameters to `%0' ignored; only first `%1' considered
noMatch = 303: Program Name does not match end of record name.
linkMatch = 304: Number of link records does not match end record amount.
modMatch = 305: Number of modification records does not match end record amount.
textMatch = 306: Number of text records does not match end record amount.
totalMatch = 307: Number of  total records does not match end record amount.

# Format reading errors
missingSeparator = 500: Missing separator
datafileCRCFail  = 501: Program name does not match previously specified label 

# Load-time Errors
loaderReadFail = 900: Failed to load loader file
loaderNoHeader = 901: Header record missing from loader file: file invalid
loaderNoName   = 902: Header record missing program name
loaderInvName  = 903: Header record contains invalid program name
loaderHNoAddr  = 904: Header record missing program load address
loaderNoEXS    = 905: Header record missing execution start address
loaderHNoPrL   = 906: Header record missing program length
loaderPrLnOOR  = 907: Header record gives invalid program length
loaderHNoDate  = 908: Header record missing assembly date: file invalid
loaderHNoLLMM  = 909: Header record missing URBAN-LLM marker: file invalid
loaderHNoVer   = 910: Header record missing assembler version number: file invalid
loaderNoEnd    = 911: End record missing from loader file: file invalid

# Runtime Errors
runIRegOOR = 1000: Segmentation fault: Attempt to access index register %0.
runRegOOR = 1001: Segmentation fault: Attempt to access register %0.
runMemOOR = 1002: Segmentation fault: Attempt to access memory at address 0x%0.
runMemOOR = 1003: Arithmetic overflow: Division by zero.

# Record Errors
textLC = 800: Text record missing valid program assigned location.
textData = 801: Text record missing valid assembled instruction/data.
textStatus = 802: Text record missing valid status flag.
textMod = 803: Text record missing valid number of modifications.
modHex = 804: Modification record missing 4 hex nybbles.
modPm = 805: Modification record missing plus or minus sign.
modFlag = 806: Modification record missing correct flag R, E, or N.
modLink = 807: Modification record missing valid label for address.
modHLS = 808: Modification record missing correct char H, L, or S.
invalidRecord = 809: Invalid Record. Records must start with valid record character.
endRecords = 810: Invalid number of records in end record.
invalidValue = 811: Invalid value. Records values must be from 0 - 4095.
invalidPlus = 812: Modification records must contain plus or minus sign.
invalidMods = 813: Number of modifications in text record is out of range of 0-16.

# Linker Errors
noLbl = 700: No corresponding linker record for label.
dupLbl = 701: More than one linker records with the same label.
lnkOORAddr = 702: Non-literal value must be within range: [0, 4095].
lnkOORLit16 = 703: Literal value must be within range: [-32768, 32767].
lnkOORLit13 = 704: Literal value must be within range: [-4096, 4095].

